using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Text;
using System.Linq;
using System.Threading.Tasks;
using System.Windows.Forms;
using DevExpress.XtraEditors;
using DevExpress.XtraBars;
using System.ComponentModel.DataAnnotations;
using System.Diagnostics;

namespace CSDLPT
{
    public partial class FrmMonHoc : DevExpress.XtraEditors.XtraForm
    {
        int viTri = 0;
        string flagOption = "";


        public FrmMonHoc()
        {
            initFormControl();


        }
        private void initFormControl()
        {
            //   lbRecord.Caption = "Record " + this.tN_CSDLPTDataSet1.getGiaoVien.Count;
            // This line of code is generated by Data Source Configuration Wizard
            //mONHOCTableAdapter1.Connection.ConnectionString = Program.connstr;
            //Debug.WriteLine("Connection string: " + Program.connstr);
            //mONHOCTableAdapter1.Fill(this.tN_CSDLPTDataSet1.MONHOC);
            
        }

        private void FrmMonHoc_Load(object sender, EventArgs e)
        {
            // TODO: This line of code loads data into the 'tN_CSDLPTDataSet1.GIAOVIEN_DANGKY' table. You can move, or remove it, as needed.
            this.gIAOVIEN_DANGKYTableAdapter.Fill(this.tN_CSDLPTDataSet1.GIAOVIEN_DANGKY);
            // TODO: This line of code loads data into the 'tN_CSDLPTDataSet1.GIAOVIEN_DANGKY' table. You can move, or remove it, as needed.
            this.gIAOVIEN_DANGKYTableAdapter.Fill(this.tN_CSDLPTDataSet1.GIAOVIEN_DANGKY);
            // TODO: This line of code loads data into the 'tN_CSDLPTDataSet1.MONHOC' table. You can move, or remove it, as needed.
            this.mONHOCTableAdapter1.Fill(this.tN_CSDLPTDataSet1.MONHOC);

        }

        private void btThem_ItemClick(object sender, ItemClickEventArgs e)
        {
            viTri = mONHOCBindingSource1.Position;
            gcGiangVien.Enabled = false;
            this.pnGiangVienControl.Enabled = true;
            try
            {
                mONHOCBindingSource1.AddNew();
                flagOption = "ADD";

                teMaGV.Focus();
                activeAllButton(false);
                btnLuu.Enabled = btHuy.Enabled = true;
            }
            catch (Exception ex)
            {
                Debug.WriteLine("Lỗi thêm giảng viên: " + ex);
            }
            try
            {
                // viTri = bdsGiangVien.Position;


                mONHOCBindingSource1.AddNew();
                gcGiangVien.Enabled = false;
                this.pnGiangVienControl.Enabled = true;
                // teMaGV.Focus();

                flagOption = "ADD";

                activeAllButton(false);
                btnLuu.Enabled = btHuy.Enabled = true;
            }
            catch (Exception ex)
            {
                Debug.WriteLine("Lỗi thêm giảng viên: " + ex);
            }
        }

        private void btXoa_ItemClick(object sender, ItemClickEventArgs e)
        {
            string magv = "";
            if (mONHOCBindingSource1.Count == 0)
            {
                MessageBox.Show("Không có giáo viên để xóa", "THÔNG BÁO", MessageBoxButtons.OK);
                return;
            }
            magv = ((DataRowView)mONHOCBindingSource1[mONHOCBindingSource1.Position])["MAGV"].ToString();
            Debug.WriteLine("MAGV: " + magv);
            if (MessageBox.Show("Bạn có thật sự muốn xóa giáo viên có mã " + magv + " ?", "THÔNG BÁO", MessageBoxButtons.OKCancel) == DialogResult.OK)
            {
                try
                {
                    mONHOCBindingSource1.RemoveCurrent();
                    this.giaovienTableAdapter.Connection.ConnectionString = Program.connstr;
                    this.giaovienTableAdapter.Update(this.tN_CSDLPTDataSet1.GIAOVIEN);
                }
                catch (Exception ex)
                {
                    Debug.WriteLine("Lỗi xóa giảng viên: " + ex);
                    this.giaovienTableAdapter.Fill(this.tN_CSDLPTDataSet1.GIAOVIEN);
                    MessageBox.Show("Lỗi xóa giáo viên: " + ex.Message, "", MessageBoxButtons.OK);
                    mONHOCBindingSource1.Position = mONHOCBindingSource1.Find("MAGV", magv);

                }
            }
            if (mONHOCBindingSource1.Count == 0) btXoa.Enabled = false;
            activeAllButton(true);
        }

        private void btSua_ItemClick(object sender, ItemClickEventArgs e)
        {

        }

        private void btHuy_ItemClick(object sender, ItemClickEventArgs e)
        {

        }

        private void btnLuu_ItemClick(object sender, ItemClickEventArgs e)
        {

        }

        private void btPhucHoi_ItemClick(object sender, ItemClickEventArgs e)
        {

        }

        private void btThoat_ItemClick(object sender, ItemClickEventArgs e)
        {

        }

        public void activeAllButton(Boolean isActive)
        {
            btXoa.Enabled = btThoat.Enabled = btThem.Enabled = btSua.Enabled = btPhucHoi.Enabled = btnLuu.Enabled = btHuy.Enabled = isActive;
        }
    }
}